



  2%| | 50/2088 [00:08<05:22,  6.32it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 91%|▉| 277/304 [00:16<00:01, 17.00it/s]



  5%| | 100/2088 [00:35<05:22,  6.17it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 99%|▉| 300/304 [00:18<00:00, 16.19it/s]




  7%| | 150/2088 [01:01<05:14,  6.17it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8








 95%|▉| 289/304 [00:17<00:00, 16.20it/s]




 10%| | 200/2088 [01:28<05:08,  6.12it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 91%|▉| 278/304 [00:16<00:01, 16.19it/s]



 12%| | 250/2088 [01:55<04:59,  6.13it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 99%|▉| 302/304 [00:18<00:00, 16.25it/s]




 14%|▏| 300/2088 [02:22<04:40,  6.38it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8








 96%|▉| 291/304 [00:17<00:00, 16.29it/s]




 17%|▏| 350/2088 [02:48<04:40,  6.20it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 92%|▉| 280/304 [00:17<00:01, 16.33it/s]



 19%|▏| 400/2088 [03:15<04:34,  6.14it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 99%|▉| 302/304 [00:18<00:00, 16.19it/s]




 22%|▏| 450/2088 [03:42<04:26,  6.14it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8








 95%|▉| 290/304 [00:17<00:00, 16.17it/s]




 24%|▏| 500/2088 [04:09<06:50,  3.87it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8
  4%|  | 12/304 [00:00<00:17, 16.84it/s]








Configuration saved in m3_output/ckpt/albert-base-v2.chemprot.vanilla/checkpoint-500/config.json
Model weights saved in m3_output/ckpt/albert-base-v2.chemprot.vanilla/checkpoint-500/pytorch_model.bin
{'eval_loss': 1.010620355606079, 'eval_f1': 0.6942727647301195, 'eval_runtime': 18.6684, 'eval_samples_per_second': 130.006, 'eval_steps_per_second': 16.284, 'epoch': 0.96}


 26%|▎| 550/2088 [04:35<04:08,  6.19it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 97%|▉| 294/304 [00:17<00:00, 16.19it/s]




 29%|▎| 600/2088 [05:02<04:02,  6.15it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 93%|▉| 283/304 [00:17<00:01, 16.19it/s]



 31%|▎| 650/2088 [05:29<03:55,  6.11it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 89%|▉| 272/304 [00:16<00:01, 16.20it/s]



 34%|▎| 700/2088 [05:56<03:45,  6.15it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8








 97%|▉| 294/304 [00:17<00:00, 16.51it/s]




 36%|▎| 750/2088 [06:22<03:29,  6.39it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 93%|▉| 283/304 [00:17<00:01, 16.67it/s]



 38%|▍| 800/2088 [06:49<03:26,  6.22it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 89%|▉| 272/304 [00:16<00:01, 16.92it/s]



 41%|▍| 850/2088 [07:16<03:21,  6.14it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8








 96%|▉| 293/304 [00:17<00:00, 16.17it/s]




 43%|▍| 900/2088 [07:43<03:13,  6.15it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 93%|▉| 283/304 [00:17<00:01, 16.17it/s]



 45%|▍| 950/2088 [08:09<03:05,  6.14it/sThe following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 89%|▉| 272/304 [00:16<00:01, 16.19it/s]




 48%|▍| 999/2088 [08:36<02:58,  6.11it/s
 48%|▍| 1000/2088 [08:36<04:19,  4.19it/The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8








Configuration saved in m3_output/ckpt/albert-base-v2.chemprot.vanilla/checkpoint-1000/config.json
Model weights saved in m3_output/ckpt/albert-base-v2.chemprot.vanilla/checkpoint-1000/pytorch_model.bin
 48%|▍| 1006/2088 [08:56<20:05,  1.11s/i



 50%|▌| 1050/2088 [09:03<02:42,  6.38it/The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 92%|▉| 279/304 [00:17<00:01, 16.20it/s]



 53%|▌| 1100/2088 [09:30<02:40,  6.15it/The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 99%|▉| 301/304 [00:18<00:00, 16.82it/s]




 55%|▌| 1150/2088 [09:56<02:33,  6.11it/The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8









 95%|▉| 289/304 [00:17<00:00, 17.07it/s]



 57%|▌| 1200/2088 [10:23<02:20,  6.31it/The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 2427
  Batch size = 8
 16%|▎ | 50/304 [00:03<00:15, 16.84it/s]
 27%|▌ | 82/304 [00:04<00:13, 16.21it/s]
 38%|▍| 115/304 [00:06<00:11, 16.22it/s]
 49%|▍| 148/304 [00:09<00:09, 16.50it/s]
 59%|▌| 180/304 [00:10<00:07, 16.18it/s]
 70%|▋| 214/304 [00:13<00:05, 16.20it/s]
 81%|▊| 246/304 [00:15<00:03, 16.27it/s]
 91%|▉| 278/304 [00:16<00:01, 16.16it/s]

 91%|▉| 278/304 [00:16<00:01, 16.16it/s]



 60%|▌| 1250/2088 [10:50<02:14,  6.23it/The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
  2%|   | 6/304 [00:00<00:15, 18.78it/s]
  Num examples = 2427
  Batch size = 8
  2%|   | 6/304 [00:00<00:15, 18.78it/s]
  2%|   | 6/304 [00:00<00:15, 18.78it/s]
  2%|   | 6/304 [00:00<00:15, 18.78it/s]
  2%|   | 6/304 [00:00<00:15, 18.78it/s]
  2%|   | 6/304 [00:00<00:15, 18.78it/s]
  2%|   | 6/304 [00:00<00:15, 18.78it/s]
  2%|   | 6/304 [00:00<00:15, 18.78it/s]
  2%|   | 6/304 [00:00<00:15, 18.78it/s]
 13%|▎ | 39/304 [00:02<00:15, 17.24it/s]
 24%|▍ | 73/304 [00:04<00:14, 16.22it/s]
 34%|▎| 104/304 [00:06<00:12, 16.21it/s]
 45%|▍| 138/304 [00:08<00:10, 16.47it/s]
 56%|▌| 170/304 [00:10<00:08, 16.18it/s]
 67%|▋| 203/304 [00:12<00:06, 16.19it/s]
 78%|▊| 236/304 [00:14<00:04, 16.34it/s]
 88%|▉| 268/304 [00:16<00:02, 16.05it/s]
 99%|▉| 300/304 [00:18<00:00, 16.17it/s]
 99%|▉| 300/304 [00:18<00:00, 16.17it/s]




 62%|▌| 1300/2088 [11:16<02:07,  6.18it/The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  Num examples = 2427
  Batch size = 8
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
  7%|▏ | 20/304 [00:01<00:17, 16.31it/s]
 17%|▎ | 53/304 [00:03<00:15, 16.16it/s]
 28%|▌ | 86/304 [00:05<00:13, 16.46it/s]
 39%|▍| 118/304 [00:07<00:11, 16.20it/s]
 50%|▍| 151/304 [00:09<00:09, 16.20it/s]
 61%|▌| 185/304 [00:11<00:07, 16.18it/s]
 72%|▋| 218/304 [00:13<00:05, 17.19it/s]
 82%|▊| 250/304 [00:15<00:03, 16.17it/s]
 93%|▉| 282/304 [00:17<00:01, 16.18it/s]
 93%|▉| 282/304 [00:17<00:01, 16.18it/s]
 93%|▉| 282/304 [00:17<00:01, 16.18it/s]
{'eval_loss': 0.9450206756591797, 'eval_f1': 0.7169344870210136, 'eval_runtime': 18.6134, 'eval_samples_per_second': 130.39, 'eval_steps_per_second': 16.332, 'epoch': 2.49}
 93%|▉| 282/304 [00:17<00:01, 16.18it/s]
 93%|▉| 282/304 [00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
{'eval_loss': 0.8343719840049744, 'eval_f1': 0.7585496497733828, 'eval_runtime': 7.897, 'eval_samples_per_second': 307.331, 'eval_steps_per_second': 38.496, 'epoch': 2.59}
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
{'eval_loss': 0.8235000371932983, 'eval_f1': 0.7593737124021426, 'eval_runtime': 15.5808, 'eval_samples_per_second': 155.768, 'eval_steps_per_second': 19.511, 'epoch': 2.68}
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
{'eval_loss': 0.7933576107025146, 'eval_f1': 0.7754429336629584, 'eval_runtime': 13.8396, 'eval_samples_per_second': 175.366, 'eval_steps_per_second': 21.966, 'epoch': 2.78}
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
{'loss': 0.5546, 'learning_rate': 3.1561649677078684e-06, 'epoch': 2.87}
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
  Batch size = 8[00:17<00:01, 16.18it/s]
 72%|▋| 1505/2088 [12:52<12:15,  1.26s/i
 72%|▋| 1505/2088 [12:52<12:15,  1.26s/i
 72%|▋| 1505/2088 [12:52<12:15,  1.26s/i
 72%|▋| 1505/2088 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
{'eval_loss': 0.8283386826515198, 'eval_f1': 0.757725587144623, 'eval_runtime': 10.5189, 'eval_samples_per_second': 230.729, 'eval_steps_per_second': 28.9, 'epoch': 2.97}
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
{'eval_loss': 0.8315683007240295, 'eval_f1': 0.7589616810877626, 'eval_runtime': 7.7192, 'eval_samples_per_second': 314.411, 'eval_steps_per_second': 39.382, 'epoch': 3.07}
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
{'eval_loss': 0.8117851614952087, 'eval_f1': 0.7647301194890812, 'eval_runtime': 7.8003, 'eval_samples_per_second': 311.144, 'eval_steps_per_second': 38.973, 'epoch': 3.16}
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
{'eval_loss': 0.8111423850059509, 'eval_f1': 0.7717346518335394, 'eval_runtime': 7.843, 'eval_samples_per_second': 309.449, 'eval_steps_per_second': 38.761, 'epoch': 3.26}
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
{'eval_loss': 0.8218162059783936, 'eval_f1': 0.7688504326328801, 'eval_runtime': 14.5175, 'eval_samples_per_second': 167.178, 'eval_steps_per_second': 20.94, 'epoch': 3.35}
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
{'eval_loss': 0.8221073150634766, 'eval_f1': 0.7655541821178409, 'eval_runtime': 18.7137, 'eval_samples_per_second': 129.691, 'eval_steps_per_second': 16.245, 'epoch': 3.45}
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
{'eval_loss': 0.8326797485351562, 'eval_f1': 0.7639060568603214, 'eval_runtime': 18.5848, 'eval_samples_per_second': 130.591, 'eval_steps_per_second': 16.357, 'epoch': 3.54}
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
{'eval_loss': 0.8232736587524414, 'eval_f1': 0.7643180881747013, 'eval_runtime': 18.6312, 'eval_samples_per_second': 130.265, 'eval_steps_per_second': 16.317, 'epoch': 3.64}
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
{'eval_loss': 0.8143490552902222, 'eval_f1': 0.7684384013185002, 'eval_runtime': 18.6194, 'eval_samples_per_second': 130.348, 'eval_steps_per_second': 16.327, 'epoch': 3.74}
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
{'loss': 0.3991, 'learning_rate': 4.7235121965695996e-07, 'epoch': 3.83}
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
  Batch size = 88 [12:52<12:15,  1.26s/i
 96%|▉| 2008/2088 [16:16<00:50,  1.58it/
 96%|▉| 2008/2088 [16:16<00:50,  1.58it/
 96%|▉| 2008/2088 [16:16<00:50,  1.58it/
 96%|▉| 2008/2088 [16:16<00:50,  1.58it/
  Batch size = 88 [16:16<00:50,  1.58it/
  Batch size = 88 [16:16<00:50,  1.58it/
  Batch size = 88 [16:16<00:50,  1.58it/
  Batch size = 88 [16:16<00:50,  1.58it/
  Batch size = 88 [16:16<00:50,  1.58it/
  Batch size = 88 [16:16<00:50,  1.58it/
  Batch size = 88 [16:16<00:50,  1.58it/
  Batch size = 88 [16:16<00:50,  1.58it/
  Batch size = 88 [16:16<00:50,  1.58it/
  Batch size = 88 [16:16<00:50,  1.58it/
  Batch size = 88 [16:16<00:50,  1.58it/
{'eval_loss': 0.8147022724151611, 'eval_f1': 0.7672023073753604, 'eval_runtime': 18.6125, 'eval_samples_per_second': 130.396, 'eval_steps_per_second': 16.333, 'epoch': 3.93}
  Batch size = 88 [16:16<00:50,  1.58it/
***** Running Evaluation *****,  1.58it/
***** Running Evaluation *****,  1.58it/
{'train_runtime': 1009.3087, 'train_samples_per_second': 16.522, 'train_steps_per_second': 2.069, 'train_loss': 0.79144001737865, 'epoch': 4.0}
***** Running Evaluation *****,  1.58it/
***** Running Evaluation *****,  1.58it/
***** Running Evaluation *****,  1.58it/
***** Running Evaluation *****,  1.58it/
***** Running Evaluation *****,  1.58it/
***** Running Evaluation *****,  1.58it/
***** Running Evaluation *****,  1.58it/
***** Running Evaluation *****,  1.58it/
***** Running Evaluation *****,  1.58it/
***** Running Evaluation *****,  1.58it/
***** Running Evaluation *****,  1.58it/
}   "test/eval_runtime": 26.6116,7210999,
2022-08-16 04:18:09 WARNING  Cloning https://huggingface.co/asahi417/m3-experiment-albert-base-v2-chemprot-vanilla into local empty directory.
2022-08-16 04:18:09 WARNING  Cloning https://huggingface.co/asahi417/m3-experiment-albert-base-v2-chemprot-vanilla into local empty directory.
2022-08-16 04:18:09 WARNING  Cloning https://huggingface.co/asahi417/m3-experiment-albert-base-v2-chemprot-vanilla into local empty directory.
2022-08-16 04:18:21 WARNING  remote: Scanning LFS files for validity, may be slow...        se-v2-chemprot-vanilla into local empty directory.
2022-08-16 04:18:21 WARNING  remote: Scanning LFS files for validity, may be slow...        se-v2-chemprot-vanilla into local empty directory.
tokenizer config file saved in m3-experiment-albert-base-v2-chemprot-vanilla/tokenizer_config.jsonchemprot-vanilla into local empty directory.
tokenizer config file saved in m3-experiment-albert-base-v2-chemprot-vanilla/tokenizer_config.jsonchemprot-vanilla into local empty directory.
remote: LFS file scan complete.        xperiment-albert-base-v2-chemprot-vanillaenizer_config.jsonchemprot-vanilla into local empty directory.
Upload file spiece.model: 100%|█| 742k/7periment-albert-base-v2-chemprot-vanillaenizer_config.jsonchemprot-vanilla into local empty directory.
Upload file spiece.model: 100%|█| 742k/7periment-albert-base-v2-chemprot-vanillaenizer_config.jsonchemprot-vanilla into local empty directory.