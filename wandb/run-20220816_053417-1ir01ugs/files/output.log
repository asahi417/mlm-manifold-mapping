
  1%|▎                                        | 49/5904 [00:03<06:47, 14.37it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 96%|███████████████████████████████████████▎ | 157/164 [00:03<00:00, 39.81it/s]

  2%|▋                                        | 99/5904 [00:11<06:44, 14.35it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8


 58%|████████████████████████▎                 | 95/164 [00:02<00:01, 39.52it/s]

  3%|█                                       | 149/5904 [00:18<06:39, 14.42it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 69%|████████████████████████████▏            | 113/164 [00:02<00:01, 39.57it/s]


  3%|█▎                                      | 199/5904 [00:26<06:35, 14.41it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 79%|████████████████████████████████▌        | 130/164 [00:03<00:00, 39.72it/s]


  4%|█▋                                      | 249/5904 [00:33<06:32, 14.42it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 90%|████████████████████████████████████▊    | 147/164 [00:03<00:00, 39.85it/s]

  5%|██                                      | 299/5904 [00:41<06:29, 14.39it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8


 51%|█████████████████████▌                    | 84/164 [00:02<00:02, 39.89it/s]

  6%|██▎                                     | 349/5904 [00:49<06:25, 14.40it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 61%|█████████████████████████                | 100/164 [00:02<00:01, 39.86it/s]


  7%|██▋                                     | 399/5904 [00:56<06:27, 14.22it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 69%|████████████████████████████▏            | 113/164 [00:02<00:01, 39.36it/s]


  8%|███                                     | 449/5904 [01:04<06:40, 13.62it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 74%|██████████████████████████████▎          | 121/164 [00:03<00:01, 38.89it/s]


  8%|███▎                                    | 493/5904 [01:11<06:21, 14.19it/s]
  8%|███▍                                    | 500/5904 [01:12<06:35, 13.67it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 80%|████████████████████████████████▊        | 131/164 [00:03<00:00, 39.04it/s]
Configuration saved in m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-500/config.json
Model weights saved in m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-500/pytorch_model.bin

  9%|███▋                                    | 549/5904 [01:20<06:16, 14.24it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 85%|██████████████████████████████████▊      | 139/164 [00:03<00:00, 39.86it/s]


 10%|████                                    | 599/5904 [01:27<06:09, 14.37it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 94%|██████████████████████████████████████▌  | 154/164 [00:03<00:00, 39.86it/s]

 11%|████▍                                   | 649/5904 [01:35<06:05, 14.38it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8


 55%|███████████████████████▎                  | 91/164 [00:02<00:01, 39.81it/s]

 12%|████▋                                   | 699/5904 [01:43<06:01, 14.38it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 65%|██████████████████████████▊              | 107/164 [00:02<00:01, 39.80it/s]


 13%|█████                                   | 749/5904 [01:50<05:58, 14.38it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 77%|███████████████████████████████▌         | 126/164 [00:03<00:00, 39.79it/s]


 14%|█████▍                                  | 799/5904 [01:58<05:55, 14.36it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 86%|███████████████████████████████████▎     | 141/164 [00:03<00:00, 39.80it/s]

 14%|█████▊                                  | 849/5904 [02:05<05:51, 14.37it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8


 97%|███████████████████████████████████████▊ | 159/164 [00:03<00:00, 39.83it/s]

 15%|██████                                  | 899/5904 [02:13<05:48, 14.36it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8


 60%|█████████████████████████                 | 98/164 [00:02<00:01, 39.82it/s]

 16%|██████▍                                 | 949/5904 [02:21<05:44, 14.36it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 70%|████████████████████████████▍            | 114/164 [00:02<00:01, 39.77it/s]


 17%|██████▋                                 | 989/5904 [02:27<05:44, 14.25it/s]
 17%|██████▌                                | 1000/5904 [02:28<05:41, 14.37it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 79%|████████████████████████████████▌        | 130/164 [00:03<00:00, 39.80it/s]
Configuration saved in m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1000/config.json
Model weights saved in m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1000/pytorch_model.bin

 18%|██████▉                                | 1049/5904 [02:36<05:37, 14.38it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 87%|███████████████████████████████████▌     | 142/164 [00:03<00:00, 39.84it/s]

 19%|███████▎                               | 1099/5904 [02:43<05:34, 14.37it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8

 96%|███████████████████████████████████████▌ | 158/164 [00:03<00:00, 39.83it/s]

 19%|███████▌                               | 1149/5904 [02:51<05:31, 14.34it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8


 59%|████████████████████████▊                 | 97/164 [00:02<00:01, 39.82it/s]

 20%|███████▉                               | 1199/5904 [02:59<05:27, 14.37it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
***** Running Evaluation *****
  Num examples = 1310
  Batch size = 8
 65%|██████████████████████████▌              | 106/164 [00:02<00:01, 39.82it/s]
 65%|██████████████████████████▌              | 106/164 [00:02<00:01, 39.82it/s]


 21%|████████▎                              | 1249/5904 [03:06<05:23, 14.37it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
 30%|████████████▊                             | 50/164 [00:01<00:02, 39.95it/s]
  Num examples = 1310
  Batch size = 8
 30%|████████████▊                             | 50/164 [00:01<00:02, 39.95it/s]
 79%|████████████████████████████████▌        | 130/164 [00:03<00:00, 39.79it/s]
 79%|████████████████████████████████▌        | 130/164 [00:03<00:00, 39.79it/s]


 22%|████████▌                              | 1299/5904 [03:14<05:20, 14.35it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
 40%|████████████████▉                         | 66/164 [00:01<00:02, 39.89it/s]
  Num examples = 1310
  Batch size = 8
 40%|████████████████▉                         | 66/164 [00:01<00:02, 39.89it/s]
 40%|████████████████▉                         | 66/164 [00:01<00:02, 39.89it/s]
 89%|████████████████████████████████████▌    | 146/164 [00:03<00:00, 39.81it/s]
 89%|████████████████████████████████████▌    | 146/164 [00:03<00:00, 39.81it/s]

 23%|████████▉                              | 1349/5904 [03:21<05:16, 14.37it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
  0%|                                                   | 0/164 [00:00<?, ?it/s]
  Num examples = 1310
  Batch size = 8
  0%|                                                   | 0/164 [00:00<?, ?it/s]
  0%|                                                   | 0/164 [00:00<?, ?it/s]
  0%|                                                   | 0/164 [00:00<?, ?it/s]
 49%|████████████████████▋                     | 81/164 [00:02<00:02, 39.76it/s]

 49%|████████████████████▋                     | 81/164 [00:02<00:02, 39.76it/s]

 24%|█████████▏                             | 1399/5904 [03:29<05:13, 14.37it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
 13%|█████▍                                    | 21/164 [00:00<00:03, 41.00it/s]
  Num examples = 1310
  Batch size = 8
 13%|█████▍                                    | 21/164 [00:00<00:03, 41.00it/s]
 13%|█████▍                                    | 21/164 [00:00<00:03, 41.00it/s]
 13%|█████▍                                    | 21/164 [00:00<00:03, 41.00it/s]
 13%|█████▍                                    | 21/164 [00:00<00:03, 41.00it/s]
 60%|█████████████████████████                 | 98/164 [00:02<00:01, 39.80it/s]

 60%|█████████████████████████                 | 98/164 [00:02<00:01, 39.80it/s]

 25%|█████████▌                             | 1449/5904 [03:37<05:10, 14.37it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
 22%|█████████▏                                | 36/164 [00:00<00:03, 40.13it/s]
  Num examples = 1310
  Batch size = 8
 22%|█████████▏                                | 36/164 [00:00<00:03, 40.13it/s]
 22%|█████████▏                                | 36/164 [00:00<00:03, 40.13it/s]
 22%|█████████▏                                | 36/164 [00:00<00:03, 40.13it/s]
 22%|█████████▏                                | 36/164 [00:00<00:03, 40.13it/s]
 22%|█████████▏                                | 36/164 [00:00<00:03, 40.13it/s]
 71%|█████████████████████████████▎           | 117/164 [00:02<00:01, 39.81it/s]
 71%|█████████████████████████████▎           | 117/164 [00:02<00:01, 39.81it/s]


 25%|█████████▊                             | 1491/5904 [03:44<05:08, 14.30it/s]
 25%|█████████▉                             | 1500/5904 [03:44<05:06, 14.37it/s]The following columns in the evaluation set don't have a corresponding argument in `AlbertForSequenceClassification.forward` and have been ignored: text. If text are not expected by `AlbertForSequenceClassification.forward`,  you can safely ignore this message.
 33%|█████████████▊                            | 54/164 [00:01<00:02, 39.90it/s]
  Num examples = 1310
  Batch size = 8
 33%|█████████████▊                            | 54/164 [00:01<00:02, 39.90it/s]
 33%|█████████████▊                            | 54/164 [00:01<00:02, 39.90it/s]
 33%|█████████████▊                            | 54/164 [00:01<00:02, 39.90it/s]
 33%|█████████████▊                            | 54/164 [00:01<00:02, 39.90it/s]
 33%|█████████████▊                            | 54/164 [00:01<00:02, 39.90it/s]
 33%|█████████████▊                            | 54/164 [00:01<00:02, 39.90it/s]
 82%|█████████████████████████████████▌       | 134/164 [00:03<00:00, 39.78it/s]
 82%|█████████████████████████████████▌       | 134/164 [00:03<00:00, 39.78it/s]
Configuration saved in m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
Configuration saved in m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
{'eval_loss': 0.21274761855602264, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.12, 'eval_samples_per_second': 317.963, 'eval_steps_per_second': 39.806, 'epoch': 0.79}
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
{'eval_loss': 0.1881464272737503, 'eval_f1': 0.9633587786259542, 'eval_runtime': 4.1176, 'eval_samples_per_second': 318.15, 'eval_steps_per_second': 39.829, 'epoch': 0.81}
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
{'eval_loss': 0.20054224133491516, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.1167, 'eval_samples_per_second': 318.213, 'eval_steps_per_second': 39.837, 'epoch': 0.84}
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
{'eval_loss': 0.21157918870449066, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.1137, 'eval_samples_per_second': 318.449, 'eval_steps_per_second': 39.867, 'epoch': 0.86}
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
{'eval_loss': 0.19111241400241852, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1152, 'eval_samples_per_second': 318.328, 'eval_steps_per_second': 39.852, 'epoch': 0.89}
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
{'eval_loss': 0.20005269348621368, 'eval_f1': 0.9625954198473282, 'eval_runtime': 4.1145, 'eval_samples_per_second': 318.39, 'eval_steps_per_second': 39.859, 'epoch': 0.91}
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Num examples = 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
{'eval_loss': 0.19749987125396729, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.1077, 'eval_samples_per_second': 318.911, 'eval_steps_per_second': 39.925, 'epoch': 0.94}
  Batch size = 8 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Batch size = 8 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Batch size = 8 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Batch size = 8 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
{'eval_loss': 0.18248410522937775, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.11, 'eval_samples_per_second': 318.731, 'eval_steps_per_second': 39.902, 'epoch': 0.97}
  Batch size = 8 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Batch size = 8 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Batch size = 8 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
{'eval_loss': 0.21416735649108887, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1164, 'eval_samples_per_second': 318.238, 'eval_steps_per_second': 39.841, 'epoch': 0.99}
  Batch size = 8 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Batch size = 8 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
{'loss': 0.176, 'learning_rate': 2.5282600401646275e-06, 'epoch': 1.02}
  Batch size = 8 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
  Batch size = 8 1310n m3_output/ckpt/albert-base-v2.amcd.add/checkpoint-1500/config.json
 34%|█████████████▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
 34%|█████████████▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
{'eval_loss': 0.22370034456253052, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1172, 'eval_samples_per_second': 318.181, 'eval_steps_per_second': 39.833, 'epoch': 1.04}
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
{'eval_loss': 0.21583624184131622, 'eval_f1': 0.9633587786259542, 'eval_runtime': 4.1172, 'eval_samples_per_second': 318.174, 'eval_steps_per_second': 39.833, 'epoch': 1.07}
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
{'eval_loss': 0.19679062068462372, 'eval_f1': 0.9580152671755725, 'eval_runtime': 4.1141, 'eval_samples_per_second': 318.421, 'eval_steps_per_second': 39.863, 'epoch': 1.09}
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
{'eval_loss': 0.2171328216791153, 'eval_f1': 0.9580152671755725, 'eval_runtime': 4.1152, 'eval_samples_per_second': 318.331, 'eval_steps_per_second': 39.852, 'epoch': 1.12}
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
{'eval_loss': 0.22668950259685516, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.1176, 'eval_samples_per_second': 318.149, 'eval_steps_per_second': 39.829, 'epoch': 1.14}
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
{'eval_loss': 0.20899048447608948, 'eval_f1': 0.9595419847328244, 'eval_runtime': 4.1154, 'eval_samples_per_second': 318.319, 'eval_steps_per_second': 39.851, 'epoch': 1.17}
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
{'eval_loss': 0.22786305844783783, 'eval_f1': 0.9587786259541985, 'eval_runtime': 4.1172, 'eval_samples_per_second': 318.175, 'eval_steps_per_second': 39.833, 'epoch': 1.19}
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
{'eval_loss': 0.2026803344488144, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1159, 'eval_samples_per_second': 318.275, 'eval_steps_per_second': 39.845, 'epoch': 1.22}
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
{'eval_loss': 0.22632846236228943, 'eval_f1': 0.9587786259541985, 'eval_runtime': 4.115, 'eval_samples_per_second': 318.35, 'eval_steps_per_second': 39.854, 'epoch': 1.24}
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
{'loss': 0.156, 'learning_rate': 2.204456244036985e-06, 'epoch': 1.27}
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
  Batch size = 8██▎                         | 2017/5904 [05:06<06:52,  9.41it/s]nfig.json
 43%|████████████████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
 43%|████████████████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
{'eval_loss': 0.19177837669849396, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1196, 'eval_samples_per_second': 317.993, 'eval_steps_per_second': 39.81, 'epoch': 1.3}
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
{'eval_loss': 0.2070292979478836, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.1179, 'eval_samples_per_second': 318.127, 'eval_steps_per_second': 39.827, 'epoch': 1.32}
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
{'eval_loss': 0.20906716585159302, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1244, 'eval_samples_per_second': 317.624, 'eval_steps_per_second': 39.764, 'epoch': 1.35}
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
{'eval_loss': 0.2055596560239792, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.2274, 'eval_samples_per_second': 309.88, 'eval_steps_per_second': 38.794, 'epoch': 1.37}
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
{'eval_loss': 0.21473421156406403, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.1307, 'eval_samples_per_second': 317.141, 'eval_steps_per_second': 39.703, 'epoch': 1.4}
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
{'eval_loss': 0.21172761917114258, 'eval_f1': 0.9648854961832061, 'eval_runtime': 4.1268, 'eval_samples_per_second': 317.441, 'eval_steps_per_second': 39.741, 'epoch': 1.42}
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
{'eval_loss': 0.2047407478094101, 'eval_f1': 0.9633587786259542, 'eval_runtime': 4.1348, 'eval_samples_per_second': 316.821, 'eval_steps_per_second': 39.663, 'epoch': 1.45}
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
{'eval_loss': 0.20546212792396545, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1255, 'eval_samples_per_second': 317.538, 'eval_steps_per_second': 39.753, 'epoch': 1.47}
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
{'eval_loss': 0.19878754019737244, 'eval_f1': 0.9633587786259542, 'eval_runtime': 4.112, 'eval_samples_per_second': 318.578, 'eval_steps_per_second': 39.883, 'epoch': 1.5}
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
{'loss': 0.1598, 'learning_rate': 1.8806524479093437e-06, 'epoch': 1.52}
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
  Batch size = 8█████▋                      | 2519/5904 [06:22<05:22, 10.51it/s]nfig.json
 51%|███████████████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
 51%|███████████████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
{'eval_loss': 0.22532889246940613, 'eval_f1': 0.9625954198473282, 'eval_runtime': 4.2227, 'eval_samples_per_second': 310.23, 'eval_steps_per_second': 38.838, 'epoch': 1.55}
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
{'eval_loss': 0.23955442011356354, 'eval_f1': 0.9595419847328244, 'eval_runtime': 4.2251, 'eval_samples_per_second': 310.052, 'eval_steps_per_second': 38.816, 'epoch': 1.58}
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
{'eval_loss': 0.2161741703748703, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1165, 'eval_samples_per_second': 318.233, 'eval_steps_per_second': 39.84, 'epoch': 1.6}
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
{'eval_loss': 0.21228688955307007, 'eval_f1': 0.9595419847328244, 'eval_runtime': 4.1176, 'eval_samples_per_second': 318.144, 'eval_steps_per_second': 39.829, 'epoch': 1.63}
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
{'eval_loss': 0.22341108322143555, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1174, 'eval_samples_per_second': 318.163, 'eval_steps_per_second': 39.831, 'epoch': 1.65}
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
{'eval_loss': 0.25098279118537903, 'eval_f1': 0.9564885496183206, 'eval_runtime': 4.1199, 'eval_samples_per_second': 317.97, 'eval_steps_per_second': 39.807, 'epoch': 1.68}
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
{'eval_loss': 0.2186541110277176, 'eval_f1': 0.9625954198473282, 'eval_runtime': 4.119, 'eval_samples_per_second': 318.039, 'eval_steps_per_second': 39.816, 'epoch': 1.7}
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
{'eval_loss': 0.20022433996200562, 'eval_f1': 0.9633587786259542, 'eval_runtime': 4.1184, 'eval_samples_per_second': 318.088, 'eval_steps_per_second': 39.822, 'epoch': 1.73}
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
{'eval_loss': 0.19569958746433258, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.1184, 'eval_samples_per_second': 318.089, 'eval_steps_per_second': 39.822, 'epoch': 1.75}
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
{'loss': 0.1474, 'learning_rate': 1.5568486517817018e-06, 'epoch': 1.78}
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
  Batch size = 8████████▉                   | 3011/5904 [07:38<08:37,  5.59it/s]nfig.json
 59%|███████████████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
 59%|███████████████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
{'eval_loss': 0.2034095823764801, 'eval_f1': 0.9587786259541985, 'eval_runtime': 4.1163, 'eval_samples_per_second': 318.247, 'eval_steps_per_second': 39.842, 'epoch': 1.8}
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
{'eval_loss': 0.19876103103160858, 'eval_f1': 0.9633587786259542, 'eval_runtime': 4.1154, 'eval_samples_per_second': 318.316, 'eval_steps_per_second': 39.85, 'epoch': 1.83}
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
{'eval_loss': 0.19965960085391998, 'eval_f1': 0.9625954198473282, 'eval_runtime': 4.1161, 'eval_samples_per_second': 318.266, 'eval_steps_per_second': 39.844, 'epoch': 1.85}
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
{'eval_loss': 0.20286637544631958, 'eval_f1': 0.9633587786259542, 'eval_runtime': 4.117, 'eval_samples_per_second': 318.192, 'eval_steps_per_second': 39.835, 'epoch': 1.88}
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
{'eval_loss': 0.1969965547323227, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1178, 'eval_samples_per_second': 318.133, 'eval_steps_per_second': 39.827, 'epoch': 1.91}
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
{'eval_loss': 0.20615831017494202, 'eval_f1': 0.9587786259541985, 'eval_runtime': 4.1135, 'eval_samples_per_second': 318.461, 'eval_steps_per_second': 39.868, 'epoch': 1.93}
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
{'eval_loss': 0.2200862467288971, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1172, 'eval_samples_per_second': 318.18, 'eval_steps_per_second': 39.833, 'epoch': 1.96}
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
{'eval_loss': 0.2149229496717453, 'eval_f1': 0.9625954198473282, 'eval_runtime': 4.1167, 'eval_samples_per_second': 318.215, 'eval_steps_per_second': 39.838, 'epoch': 1.98}
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
{'eval_loss': 0.22082901000976562, 'eval_f1': 0.9625954198473282, 'eval_runtime': 4.1158, 'eval_samples_per_second': 318.282, 'eval_steps_per_second': 39.846, 'epoch': 2.01}
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
{'loss': 0.1335, 'learning_rate': 1.2330448556540599e-06, 'epoch': 2.03}
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
  Batch size = 8████████████▏               | 3505/5904 [08:54<15:33,  2.57it/s]nfig.json
 68%|██████████████████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
 68%|██████████████████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
{'eval_loss': 0.2243177741765976, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1124, 'eval_samples_per_second': 318.548, 'eval_steps_per_second': 39.879, 'epoch': 2.06}
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
{'eval_loss': 0.2196515053510666, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1142, 'eval_samples_per_second': 318.412, 'eval_steps_per_second': 39.862, 'epoch': 2.08}
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
{'eval_loss': 0.21991008520126343, 'eval_f1': 0.9625954198473282, 'eval_runtime': 4.1136, 'eval_samples_per_second': 318.456, 'eval_steps_per_second': 39.868, 'epoch': 2.11}
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
{'eval_loss': 0.22685980796813965, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1136, 'eval_samples_per_second': 318.455, 'eval_steps_per_second': 39.868, 'epoch': 2.13}
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
{'eval_loss': 0.2434980273246765, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.1133, 'eval_samples_per_second': 318.475, 'eval_steps_per_second': 39.87, 'epoch': 2.16}
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
{'eval_loss': 0.24767880141735077, 'eval_f1': 0.9587786259541985, 'eval_runtime': 4.1167, 'eval_samples_per_second': 318.212, 'eval_steps_per_second': 39.837, 'epoch': 2.18}
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
{'eval_loss': 0.24159224331378937, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.1134, 'eval_samples_per_second': 318.472, 'eval_steps_per_second': 39.87, 'epoch': 2.21}
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
{'eval_loss': 0.2398466169834137, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.2381, 'eval_samples_per_second': 309.101, 'eval_steps_per_second': 38.697, 'epoch': 2.24}
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
{'eval_loss': 0.23587016761302948, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1336, 'eval_samples_per_second': 316.912, 'eval_steps_per_second': 39.674, 'epoch': 2.26}
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
{'loss': 0.1084, 'learning_rate': 9.092410595264181e-07, 'epoch': 2.29}
  Batch size = 8███████████████▍            | 4009/5904 [10:10<07:02,  4.49it/s]nfig.json
 76%|█████████████████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
 76%|█████████████████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
{'eval_loss': 0.23046362400054932, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1367, 'eval_samples_per_second': 316.674, 'eval_steps_per_second': 39.645, 'epoch': 2.29}
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
{'eval_loss': 0.23040613532066345, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1185, 'eval_samples_per_second': 318.077, 'eval_steps_per_second': 39.82, 'epoch': 2.31}
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
{'eval_loss': 0.22801654040813446, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.166, 'eval_samples_per_second': 314.448, 'eval_steps_per_second': 39.366, 'epoch': 2.34}
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
{'eval_loss': 0.23817124962806702, 'eval_f1': 0.9595419847328244, 'eval_runtime': 4.2392, 'eval_samples_per_second': 309.023, 'eval_steps_per_second': 38.687, 'epoch': 2.36}
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
{'eval_loss': 0.2364964783191681, 'eval_f1': 0.9595419847328244, 'eval_runtime': 4.1431, 'eval_samples_per_second': 316.19, 'eval_steps_per_second': 39.584, 'epoch': 2.39}
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
{'eval_loss': 0.24032923579216003, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.1194, 'eval_samples_per_second': 318.007, 'eval_steps_per_second': 39.812, 'epoch': 2.41}
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
{'eval_loss': 0.24263516068458557, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.1183, 'eval_samples_per_second': 318.09, 'eval_steps_per_second': 39.822, 'epoch': 2.44}
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
{'eval_loss': 0.2408173829317093, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1193, 'eval_samples_per_second': 318.013, 'eval_steps_per_second': 39.812, 'epoch': 2.46}
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
{'eval_loss': 0.24311472475528717, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.1198, 'eval_samples_per_second': 317.973, 'eval_steps_per_second': 39.807, 'epoch': 2.49}
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
{'eval_loss': 0.23512020707130432, 'eval_f1': 0.9595419847328244, 'eval_runtime': 4.1188, 'eval_samples_per_second': 318.05, 'eval_steps_per_second': 39.817, 'epoch': 2.52}
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
  Batch size = 8██████████████████▊         | 4507/5904 [11:26<06:45,  3.45it/s]nfig.json
{'loss': 0.1123, 'learning_rate': 5.854372633987763e-07, 'epoch': 2.54}
 85%|█████████████████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
 85%|█████████████████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
{'eval_loss': 0.24840903282165527, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1181, 'eval_samples_per_second': 318.109, 'eval_steps_per_second': 39.824, 'epoch': 2.54}
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
{'eval_loss': 0.252431720495224, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.119, 'eval_samples_per_second': 318.041, 'eval_steps_per_second': 39.816, 'epoch': 2.57}
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
{'eval_loss': 0.2407379150390625, 'eval_f1': 0.9610687022900762, 'eval_runtime': 4.122, 'eval_samples_per_second': 317.808, 'eval_steps_per_second': 39.787, 'epoch': 2.59}
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
{'eval_loss': 0.23364712297916412, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1205, 'eval_samples_per_second': 317.923, 'eval_steps_per_second': 39.801, 'epoch': 2.62}
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
{'eval_loss': 0.23109902441501617, 'eval_f1': 0.9625954198473282, 'eval_runtime': 4.1204, 'eval_samples_per_second': 317.927, 'eval_steps_per_second': 39.802, 'epoch': 2.64}
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
{'eval_loss': 0.225712850689888, 'eval_f1': 0.9625954198473282, 'eval_runtime': 4.1191, 'eval_samples_per_second': 318.033, 'eval_steps_per_second': 39.815, 'epoch': 2.67}
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
{'eval_loss': 0.22630293667316437, 'eval_f1': 0.9603053435114504, 'eval_runtime': 4.123, 'eval_samples_per_second': 317.73, 'eval_steps_per_second': 39.777, 'epoch': 2.69}
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
{'eval_loss': 0.22257061302661896, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1248, 'eval_samples_per_second': 317.588, 'eval_steps_per_second': 39.759, 'epoch': 2.72}
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
{'eval_loss': 0.2235611528158188, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1239, 'eval_samples_per_second': 317.658, 'eval_steps_per_second': 39.768, 'epoch': 2.74}
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
{'eval_loss': 0.2305377572774887, 'eval_f1': 0.9625954198473282, 'eval_runtime': 4.1258, 'eval_samples_per_second': 317.517, 'eval_steps_per_second': 39.75, 'epoch': 2.77}
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
{'loss': 0.1474, 'learning_rate': 2.616334672711346e-07, 'epoch': 2.79}
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
  Batch size = 8██████████████████████      | 5005/5904 [12:42<05:44,  2.61it/s]nfig.json
 94%|████████████████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
{'eval_loss': 0.23237700760364532, 'eval_f1': 0.9625954198473282, 'eval_runtime': 4.1378, 'eval_samples_per_second': 316.595, 'eval_steps_per_second': 39.635, 'epoch': 2.82}
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
{'eval_loss': 0.23041929304599762, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1282, 'eval_samples_per_second': 317.332, 'eval_steps_per_second': 39.727, 'epoch': 2.85}
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
{'eval_loss': 0.23038256168365479, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1989, 'eval_samples_per_second': 311.985, 'eval_steps_per_second': 39.058, 'epoch': 2.87}
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
{'eval_loss': 0.23092660307884216, 'eval_f1': 0.9633587786259542, 'eval_runtime': 4.1934, 'eval_samples_per_second': 312.397, 'eval_steps_per_second': 39.109, 'epoch': 2.9}
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
{'eval_loss': 0.2316635251045227, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1186, 'eval_samples_per_second': 318.066, 'eval_steps_per_second': 39.819, 'epoch': 2.92}
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
{'eval_loss': 0.23249655961990356, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1191, 'eval_samples_per_second': 318.03, 'eval_steps_per_second': 39.814, 'epoch': 2.95}
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
{'eval_loss': 0.2324194461107254, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1196, 'eval_samples_per_second': 317.995, 'eval_steps_per_second': 39.81, 'epoch': 2.97}
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  Batch size = 8█████████████████████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
{'eval_loss': 0.23204194009304047, 'eval_f1': 0.9618320610687023, 'eval_runtime': 4.1173, 'eval_samples_per_second': 318.168, 'eval_steps_per_second': 39.832, 'epoch': 3.0}
***** Running Evaluation *****███████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
***** Running Evaluation *****███████████▍  | 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  warnings.warn(teps_per_second": 39.782,11,| 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
  warnings.warn(teps_per_second": 39.782,11,| 5525/5904 [14:00<00:29, 12.68it/s]nfig.json
Model weights saved in m3-experiment-albert-base-v2-amcd-add/pytorch_model.bins]nfig.json
Model weights saved in m3-experiment-albert-base-v2-amcd-add/pytorch_model.bins]nfig.json
To https://huggingface.co/asahi417/m3-experiment-albert-base-v2-amcd-addel.bins]nfig.json
/home/asahi/mlm-manifold-mapping/m3-experiment-albert-base-v2-amcd-add is already a clone of https://huggingface.co/asahi417/m3-experiment-albert-base-v2-amcd-add. Make sure you pull the latest changes with `repo.git_pull()`.
/home/asahi/mlm-manifold-mapping/m3-experiment-albert-base-v2-amcd-add is already a clone of https://huggingface.co/asahi417/m3-experiment-albert-base-v2-amcd-add. Make sure you pull the latest changes with `repo.git_pull()`.
Upload file spiece.model:  78%|███████████▋   | 576k/742k [00:01<00:00, 556kB/s]y a clone of https://huggingface.co/asahi417/m3-experiment-albert-base-v2-amcd-add. Make sure you pull the latest changes with `repo.git_pull()`.
   2844ec4..8633d6d  main -> main█████████▋   | 576k/742k [00:01<00:00, 556kB/s]remote: Scanning LFS files for validity, may be slow...        rt-base-v2-amcd-add. Make sure you pull the latest changes with `repo.git_pull()`.
   2844ec4..8633d6d  main -> main█████████▋   | 576k/742k [00:01<00:00, 556kB/s]remote: Scanning LFS files for validity, may be slow...        rt-base-v2-amcd-add. Make sure you pull the latest changes with `repo.git_pull()`.